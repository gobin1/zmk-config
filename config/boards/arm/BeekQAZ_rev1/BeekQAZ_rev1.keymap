#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 	0
#define NUMSYM 		1
#define NAV		2	
#define FUNC		3
#define MISC		4

/ {
	combos {
	compatible = "zmk,combos";
		combo_esc {
			timeout-ms = <27>;
			key-positions = <0 1>;
			bindings = <&kp ESC>;
		};
		combo_tab {
			timeout-ms = <27>;
			key-positions = <10 11>;
			bindings = <&kp TAB>;
		};
		combo_bpc {
			timeout-ms = <27>;
			key-positions = <8 9>;
			bindings = <&kp BSPC>;
		};
		combo_media_prev {
			timeout-ms = <27>;
			key-positions = <1 2>;
			layers = <2>;
			bindings = <&kp C_PREV>;
		};
		combo_media_next {
			timeout-ms = <27>;
			key-positions = <2 3>;
			layers = <2>;
			bindings = <&kp C_NEXT>;
		};
		combo_media_next {
			timeout-ms = <27>;
			key-positions = <30 31>;
			layers = <0>;
			bindings = <&mo MISC>;
		};
    };
};

/ {
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			bindings = <
	&mt LCTRL Q      &kp W         &kp E         &kp R         &kp T            &kp Y            &kp U            &kp I            &kp O            &kp P
	&lt NAV A        &kp S         &kp D         &kp F         &kp G            &kp H            &kp J            &kp K            &kp L            &lt MISC SQT
	&mt LSHIFT Z     &kp X         &kp C         &kp V         &kp B            &kp N            &kp M            &kp COMMA        &kp DOT         
    &kp LALT         &kp LGUI                                       &lt NUMSYM SPACE                                               &mt LALT SEMI    &mt LCTRL FSLH   
			>;
		};
		numsym_layer {
			bindings = <
	&kp N1           &kp N2        &kp N3        &kp N4        &kp N5           &kp N6           &kp N7           &kp N8           &kp N9           &kp N0
	&kp F1           &kp F2        &kp F3        &kp F4        &kp F5           &kp F6           &kp MINUS        &kp EQUAL        &kp LBKT         &kp RBKT
	&kp F7           &kp F8        &kp F9        &kp F10       &kp F11          &kp F12          &trans           &trans           &trans
    &trans           &trans                                         &trans                                                         &kp GRAVE        &kp BSLH   
			>;
		};
		nav_layer {
			bindings = <
	&kp F1           &kp F2        &kp F3        &kp F4        &none            &none            &kp LC(LEFT)     &kp UP           &kp LC(RIGHT)    &none   
	&kp F5           &kp F6        &kp F7        &kp F8        &none            &none            &kp LEFT         &kp DOWN         &kp RIGHT        &none
	&kp F9           &kp F10       &kp F11       &kp F12       &trans           &kp C_PREV       &kp C_PP         &kp C_NEXT       &kp C_VOL_UP         
    &trans           &trans                                    &trans                                                              &trans           &kp C_VOL_DN   
			>;
		};
		func_layer {
			bindings = <
	&bootloader      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none            &none            &none           &none             &none            &none 
	&none            &none         &none         &none         &none            &none            &none           &none             &none            &reset
	&none            &none         &none         &none         &trans           &none            &none           &none             &none        
    &ext_power EP_TOG&none                                     &none                                                               &none            &none   
			>;
		};
		misc_layer {
			bindings = <
	&bootloader      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none            &none            &none           &none             &none            &none 
	&none            &none         &none         &none         &none            &none            &none           &none             &none            &reset
	&none            &mo FUNC         &none         &none         &trans           &none            &none           &none             &none        
    &ext_power EP_TOG&none                                     &none                                                               &none            &none   
			>;
		};
	};


};
